syntax = "proto3";
package user;
option go_package = "service/v1/user";

import "grpc-graphql-gateway/include/graphql/graphql.proto";
import "google/api/annotations.proto";

service User {
    // Login
    rpc Login(LoginRequest) returns (UserInfo) {
        option (google.api.http) = {
            post: "/login"
            body: "*"
        };
    };
    // Logout
    rpc Logout(LogoutEntry) returns (LogoutEntry) {
        option (google.api.http) = {
            post: "/logout"
            body: "*"
        };
    };
    // UserInfo
    rpc GetUserInfo(GetUserInfoEntry) returns (UserInfo) {
        option (graphql.schema) = {
            type: QUERY
            name: "GetUserInfo"
        };
        option (google.api.http) = {
            get: "/user/info/{id}"
        };
    };
};

message UserInfo {
    string id = 1;
    string account = 2;
    string password = 3;
    string name = 4;
    string phone_number = 5;
    string address = 6;
    enum Sex {
        WOMAN = 0;
        MAN = 1;
        UNKNOWN = 2;
    };
    string signure = 7;
}

message LoginRequest {
    string account = 1;
    string password = 2;
    string phone_number = 3;
    reserved 4 to 10;
    string check_number = 11 [(graphql.field) = {required: true}];
}

message LogoutEntry {
    string account = 1;
    bool status = 2;
}

message GetUserInfoEntry {
    string id = 1;
    string account = 2;
    string phone_number = 3;
    string token = 4;
}





